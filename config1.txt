SIZE 25

NUM_BOOTSTRAP_NODES 4
NUM_TOPICS 100

# parameters of periodic execution
CYCLES 50*CYCLE
CYCLE 10
ENDTIME CYCLES

# parameters of message transfer
MINDELAY 0
MAXDELAY 1*CYCLE


########################################################### GENERAL SIMULATION SECTION
random.seed 34245324
network.size SIZE
simulation.endtime ENDTIME
simulation.logtime CYCLE
network.node poldercast.util.PolderCastBaseNode
{
    measureTopicSubscriptionLoad true
    measureTopicPublicationLoad false
}

########################################################### PROTOCOLS SECTION
protocol.transportUniformRandom  peersim.transport.UniformRandomTransport
{
    mindelay MINDELAY
    maxdelay MAXDELAY
}

MAX_VIEW_SIZE 20
MAX_GOSSIP_LENGTH 10
protocol.cyclon poldercast.protocols.CyclonProtocol
{
    transport transportUniformRandom
    step  CYCLE
    maxViewSize MAX_VIEW_SIZE
    maxGossipLength MAX_GOSSIP_LENGTH
}


include.protocol transportUniformRandom cyclon

########################################################### INITIALIZERS SECTION
# this initializer assigns each node an ID
init.poldercastIdAssigner poldercast.initializers.PolderCastIdAssigner

# this adds initial nodes into the cyclon view
init.bootstrapper WireKOut
{
    protocol cyclon
    k 3
    undir true
}

init.cycleScheduler CDScheduler
{
    # list of cycle protocols separated by whitespace
    protocol cyclon
}

# the ordered sequence of initializers that must be run
include.init poldercastIdAssigner bootstrapper cycleScheduler

########################################################### CONTROLS SECTION

control.viewStats poldercast.controls.ViewStats
{
    step  CYCLE
    protocol cyclon
}
control.netStats poldercast.controls.NetStats
{
    step  CYCLE
    protocol cyclon
}
include.control viewStats netStats